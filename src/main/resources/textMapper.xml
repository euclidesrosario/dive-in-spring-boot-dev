<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="com.imooc.diveinspringboot.ICatagoryOperation">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!--
        根据id查询得到一个user对象
     -->
    <resultMap id="contentMap" type="com.imooc.diveinspringboot.jl.spring.model.Text">
        <id property="id" column="id"/>
        <result property="text_content" column="text_content"/>
    </resultMap>
    <insert id="insertCatagory" parameterType="String">
        INSERT INTO text ( text_content ) VALUES( #{text_content} )
    </insert>
    <select id="findAllByLikeContent" parameterType="String" resultMap="contentMap">
        <!-- select id, text_content from text where text_content like #{keyText}  -->
        select id, text_content from text where text_content like CONCAT('%',#{keyText},'%')
    </select>
    <insert id="insertFile" parameterType="com.imooc.diveinspringboot.jl.spring.model.TextFile">
        INSERT INTO text_file ( filename, data ) VALUES( #{filename}, #{data})
    </insert>
</mapper>